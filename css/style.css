/* Set the scroll behavior to smooth so that when you click the in the header, the screen scrolls down rather than jumps */
html {
  scroll-behavior: smooth;
}

/* Set the margin to 0 to make sure the page stretches all the way to the edge of the browser window. */
body {
  margin: 0;
}

/* Removed min-width because some phones are narrower than 500px */

header, footer {
  background-color: #4A3065;
  text-align: left;
/* min-width: 500px; */
}

/* Changed header color and default font, set height to full screen height, set display to felx in order to easily center contents. (We could also use grid, but I went with flex since we only have a single column.) Also set the font-family to Work Sane. Rememeber, the cascade in "Cascading Style Sheets" means that these font settings will flow down into everything inside the wrapper unless we override it--which we do with h1 */
header {
  font-family: Tacoma;
  color: #fff;
  min-height: 100vh;
  display: flex;
}

main {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(40%, 1fr) ) ;
  grid-gap: 20px;
  margin-top: 44px;
  justify-items: center;
  justify-content: center;
  align-items: stretch;
  align-content: center;
}

/* Added h1 definition. Notice the font size calculation. This calc sets the font seize at AT LEAST 1.93em, then adds 2% of the view width per character (approx.) */
h1 {
  font-family: Segoe UI;
  font-size: calc(1em + 3vw);
  padding-bottom: .67em;
  border-bottom: 1px solid;
  line-height: 1.3;
}

h2 {
  font-family: American Captain;
  font-size: 18px;
  font-weight: 600;
  letter-spacing: 0.3px;
  text-align: left;
  color: #008080;
  padding: 10px 20px 0px 20px;
}

img {
  width: 100%;
  height: auto;
}

/* Added wrapper class, set some spacing. Remember, margin sets space outside of the box, while padding sets the space inside the box */
.wrapper {
  max-width: : 1150px;
  margin: auto;
  padding: 50px;
  display: block;
}

.bio {
  color: #ffffff;
  font-size: 24px;
  font-family: 'Work Sans';
}

/* Added a button and a box for that button. The "flex" makes it easier to center the button. If you don't want the button centered, you could remove it */
.buttonBox {
  display: flex;
  justify-content: center;
  align-content: center;
}

.myButton {
  border-radius: 28px;
  border: 1px solid #ffffff;
  cursor: pointer;
  color: #ffffff;
  font-size: 20px;
  padding: 16px 31px;
  text-decoration: none;
  margin: 1.69em auto;
}

.myButton:hover {
    background-color:#e69708;
}

.myButton:active {
    position:relative;
    top:1px;
}

.project {
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.5);
  width: 100%;
}

.a {

}

.c {

}

.time {
  padding-left: 10px;
  padding-top: 10px;
  width: 20px;
  height: auto;
}

.mins {
  display: inline-block;
  font-family: Ariel;
  font-size: 14px;
  font-weight: 500;
  letter-spacing: 0.3px;
  text-align: left;
  color: #4a4a4a;
  position: relative;
  bottom: 5px;
}

.description {
  font-family: Comic Sans;
  font-size: 14px;
  font-weight: 300;
  line-height: 1.29;
  letter-spacing: 0.1px;
  text-align: left;
  color: #4a4a4a;
  padding: 0px 20px 20px 20px;
}

.logo {
  width: 115px;
  height: 21.1px;
  object-fit: contain;
  padding: 20px;
}

/* Removed min-width because some mobile screens are smaller than 500px */
.container {
/*  min-width: 500px; */
  margin: auto;
}

footer div {
  margin-top: 44px;
  height: 100%;
  font-family: 'Raleway', sans-serif;
  font-size: 14px;
  display: flex;
  align-content: center;
  padding: 10px 20px
  color: rgba(255, 0, 0, 0.5);
}
